package router

import (
	_ "kinexx_backend/docs" // docs is generated by Swag CLI, you have to import it.
	"kinexx_backend/pkg/services/campaign_service"
	"kinexx_backend/pkg/services/view_content_service"
	"kinexx_backend/pkg/services/view_service"

	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger"
)

// NewRouter builds and returns a new router from routes
func NewRouter() *mux.Router {
	// When StrictSlash == true, if the route path is "/path/", accessing "/path" will perform a redirect to the former and vice versa.
	router := mux.NewRouter().StrictSlash(true)
	router.Use(Logger)
	//Path
	sub := router.PathPrefix("/api/v1").Subrouter()
	router.PathPrefix("/swagger").Handler(httpSwagger.WrapHandler)
	routes = append(routes, campaign_service.CampaignServices...)
	routes = append(routes, view_content_service.ViewContentServices...)
	routes = append(routes, view_service.ViewService...)

	for _, route := range routes {
		sub.
			HandleFunc(route.Pattern, route.HandlerFunc).
			Name(route.Name).
			Methods(route.Method)
	}

	return router
}
