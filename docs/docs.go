// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "soberkoder@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/register": {
            "post": {
                "description": "SignUp with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SignUp"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "SignUp",
                        "name": "SignUp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Credentials": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "address": {
                    "$ref": "#/definitions/entity.AddressDB"
                },
                "auth_token": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "designation": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emailLoginOtp": {
                    "type": "string"
                },
                "emailSentTime": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastLoginDeviceInfo": {},
                "lastLoginLocation": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordResetCode": {
                    "description": "TermsChecked        bool             ` + "`" + `bson:\"terms_and_condition\" json:\"termsAndCondition\"` + "`" + `",
                    "type": "string"
                },
                "passwordResetTime": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "urlToProfileImage": {
                    "type": "string"
                },
                "verificationCode": {
                    "type": "string"
                },
                "verifiedTime": {
                    "type": "string"
                }
            }
        },
        "entity.AddressDB": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo_swagger holds exported Swagger Info so clients can modify it
var SwaggerInfo_swagger = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:6019",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Kinexx API's",
	Description:      "This is a sample serice for managing kinexx",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo_swagger.InstanceName(), SwaggerInfo_swagger)
}
